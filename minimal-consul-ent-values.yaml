# name your datacenter
global:
  name: consul
  datacenter: dc1
  image: 'hashicorp/consul-enterprise:1.10.2-ent'
  enableConsulNamespaces: true
  gossipEncryption:
    secretKey: key
    secretName: consul-gossip-encryption-key
  tls:
    enableAutoEncrypt: true
    enabled: true
    verify: true
  acls:
    manageSystemACLs: true
  metrics:
    enabled: true

server:
  # use 3 server
  replicas: 3
  affinity: null
  enterpriseLicense:
    secretName: 'consul-ent-license'
    secretKey: 'key'
    enableLicenseAutoload: true
  resources:
    requests:
      memory: '32Mi'
      cpu: '25m'
    limits:
      memory: '64Mi'
      cpu: '50m'
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: false
    runAsUser: 0
  extraConfig: |
    {
      "ui_config": {
        "dashboard_url_templates": {
          "service": "http://localhost:3000/d/gC9j6mc7z/service-overview?orgId=1&var-service={{ "{{" }}Service.Name}}&var-namespace={{ "{{" }}Service.Namespace}}&var-dc={{ "{{" }}Datacenter}}"
        }
      }
    }

client:
  enabled: true
  # enable grpc on your client to support consul connect
  grpc: true
  consulNamespaces:
    mirroringK8S: true
  transparentProxy:
    defaultEnabled: false
  resources:
    requests:
      memory: '32Mi'
      cpu: '25m'
    limits:
      memory: '64Mi'
      cpu: '50m'

ui:
  enabled: true
  metrics:
    enabled: true # by default, this inherits from the value global.metrics.enabled
    provider: "prometheus"
    baseURL: http://prometheus-server.monitoring.svc.cluster.local

connectInject:
  consulNamespaces:
    mirroringK8S: true
  enabled: true
  replicas: 1
  transparentProxy:
    defaultEnabled: false
  envoyExtraArgs: "--log-level debug"

# Enable the CRD controller
controller:
  enabled: true
  
ingressGateways:
  enabled: true
  affinity: null
  defaults:
    consulNamespace: default
    replicas: 1
    service:
      type: ClusterIP
    resources:
      requests:
        memory: '32Mi'
        cpu: '25m'
      limits:
        memory: '64Mi'
        cpu: '50m'
  gateways:
    - name: sales-ingress
      service:
        ports:
        - port: 8080
          nodePort: 32766